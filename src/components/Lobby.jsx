/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Author: DOBLEJ3D (https://sketchfab.com/Doblej0101)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/squid-game-lobby-map-bdbf3bb5ce194ea894f560c96d4f0939
Title:  Lobby Map
*/

import React, { useRef } from "react";
import { useGLTF } from "@react-three/drei";
import { RigidBody } from "@react-three/rapier";
export function Lobby(props) {
  const { nodes, materials } = useGLTF("/models/lobby_map.glb", "draco/gltf/");
  return (
    <group {...props} dispose={null}>
      <group scale={0.01}>
        <group
          position={[0, -163.081, -571.459]}
          rotation={[-Math.PI / 2, 0, 0]}
          scale={3470.68}
        >
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Paredes_WitheBrink_0.geometry}
            material={materials.WitheBrink}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Paredes_Green_0.geometry}
            material={materials.Green}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Paredes_black001_0.geometry}
            material={materials["black.001"]}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Paredes_Material007_0.geometry}
            material={materials["Material.007"]}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Paredes_Stair_0.geometry}
            material={materials.Stair}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Paredes_BlackLine_0.geometry}
            material={materials.BlackLine}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Paredes_Wall_withe_0.geometry}
            material={materials.Wall_withe}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Paredes_Material_0.geometry}
            material={materials.Material}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Paredes_black_0.geometry}
            material={materials.black}
          />
        </group>
        <group
          position={[374.886, 338.097, 2782.242]}
          rotation={[-Math.PI / 2, 0, 0]}
          scale={100}
        >
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.puerta_D_puerta_0.geometry}
            material={materials.puerta}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.puerta_D_metal_0.geometry}
            material={materials.metal}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.puerta_D_nwgro_0.geometry}
            material={materials.nwgro}
          />
        </group>
        <group
          position={[-375.92, 335.997, 2782.242]}
          rotation={[-Math.PI / 2, 0, -Math.PI]}
          scale={100}
        >
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.puerta_I_puerta_0.geometry}
            material={materials.puerta}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.puerta_I_metal_0.geometry}
            material={materials.metal}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.puerta_I_nwgro_0.geometry}
            material={materials.nwgro}
          />
        </group>
        <group
          position={[-2895.911, 211.24, 273.429]}
          rotation={[-2.563, 0.034, -0.006]}
          scale={3.557}
        >
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Cama_Material001_0.geometry}
            material={materials["Material.001"]}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Cama_Material002_0.geometry}
            material={materials["Material.002"]}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Cama_Material003_0.geometry}
            material={materials["Material.003"]}
          />
        </group>
        <group
          position={[0, 1474.627, 1442.412]}
          rotation={[-Math.PI / 2, 0, 0]}
          scale={100}
        >
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.TV_Material004_0.geometry}
            material={materials["Material.004"]}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.TV_Material005_0.geometry}
            material={materials["Material.005"]}
          />
        </group>
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Pork_Material006_0.geometry}
          material={materials["Material.006"]}
          position={[0.837, 2781.975, -2073.207]}
          rotation={[-Math.PI / 2, 0, 0]}
          scale={100}
        />
      </group>
    </group>
  );
}


export function LobbyFloor({ scale = 1 }) {
    return (
      <RigidBody type="fixed" colliders="cuboid" name="lobbyFloor">
        <mesh position={[0, 0, 0]}>
          <boxGeometry args={[100 * scale, 0.3, 100 * scale]} />
          <meshBasicMaterial  opacity={0} transparent />
        </mesh>
      </RigidBody>
    );
  }
useGLTF.preload("/models/lobby_map.glb", "draco/gltf/");
